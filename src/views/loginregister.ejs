<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>CodeSecure - Login & Register</title>
  <link rel="stylesheet" href="/stylesheets/loginregister.css" />
</head>
<body>
  <div class="main-container">
    <header class="header-section">
      <div class="brand-logo">CodeSecure</div>
      <nav class="navigation-menu">
        <a href="/" class="nav-link">Home</a>
        <a href="/about" class="nav-link">About</a>
        <a href="/contact" class="nav-link">Contact</a>
        <a href="/login" class="nav-link">Login</a>
      </nav>
      <div class="user-actions">
        <a href="/support" class="action-btn">Support</a>
        <a href="/register" class="action-btn register-btn">Register</a>
      </div>
    </header>

    <main class="content-area">
      <div class="auth-grid">
        <section class="welcome-card">
          <h1 class="welcome-title">Welcome to CodeSecure</h1>
          <p class="welcome-description">Secure & Fair Online Coding Examination Platform</p>
        </section>

        <section class="auth-toggle-section">
          <div class="toggle-buttons">
            <a href="#" class="toggle-btn active" data-form="login">Login</a>
            <a href="#" class="toggle-btn" data-form="register">Register</a>
          </div>
        </section>

        <section class="auth-forms-section">
          <div class="form-container login-form active">
            <h2 class="form-title">Login to Your Account</h2>
            <form class="auth-form" id="loginForm">
              <div class="form-group">
                <label class="form-label">Email Address</label>
                <input type="email" class="form-input" id="loginEmail" placeholder="Enter your email" required>
              </div>
              <div class="form-group">
                <label class="form-label">Password</label>
                <input type="password" class="form-input" id="loginPassword" placeholder="Enter your password" required>
              </div>
              <div class="form-options">
                <label class="checkbox-label">
                  <input type="checkbox" class="form-checkbox">
                  <span class="checkmark"></span>
                  Remember me
                </label>
                <a href="#" class="forgot-link">Forgot Password?</a>
              </div>
              <div class="submit-btn-container">
                <button type="submit" class="submit-btn">Login</button>
              </div>
              <div id="loginMessage" class="message" style="display: none;"></div>
            </form>
          </div>

          <div class="form-container register-form">
            <h2 class="form-title">Create New Account</h2>
            <form class="auth-form" id="registerForm">
              <div class="form-row">
                <div class="form-group">
                  <label class="form-label">First Name</label>
                  <input type="text" class="form-input" id="firstName" placeholder="First name" required>
                </div>
                <div class="form-group">
                  <label class="form-label">Last Name</label>
                  <input type="text" class="form-input" id="lastName" placeholder="Last name" required>
                </div>
              </div>
              <div class="form-group">
                <label class="form-label">Username</label>
                <input type="text" class="form-input" id="username" placeholder="Choose a username" required>
              </div>
              <div class="form-group">
                <label class="form-label">Email Address</label>
                <input type="email" class="form-input" id="registerEmail" placeholder="Enter your email" required>
              </div>
              <div class="form-group">
                <label class="form-label">Password</label>
                <input type="password" class="form-input" id="registerPassword" placeholder="Create a password" required>
              </div>
              <div class="form-group">
                <label class="form-label">Confirm Password</label>
                <input type="password" class="form-input" id="confirmPassword" placeholder="Confirm your password" required>
              </div>
              <div class="form-group">
                <label class="form-label">Role</label>
                <select class="form-input" id="userRole">
                  <option value="student">Student</option>
                  <option value="instructor">Instructor</option>
                </select>
              </div>
              <div class="form-options">
                <label class="checkbox-label">
                  <input type="checkbox" class="form-checkbox" required>
                  <span class="checkmark"></span>
                  I agree to the Terms of Service and Privacy Policy
                </label>
              </div>
              <div class="submit-btn-container">
                <button type="submit" class="submit-btn">Create Account</button>
              </div>
              <div id="registerMessage" class="message" style="display: none;"></div>
            </form>
          </div>
        </section>

        <section class="auth-benefits">
          <h3 class="benefits-title">Why Choose CodeSecure?</h3>
          <div class="benefits-grid">
            <div class="benefit-item">
              <div class="benefit-icon">ðŸ”’</div>
              <h4 class="benefit-title">Secure Exams</h4>
              <p class="benefit-text">Advanced proctoring and anti-cheating measures</p>
            </div>
            <div class="benefit-item">
              <div class="benefit-icon">âš¡</div>
              <h4 class="benefit-title">Real-time Coding</h4>
              <p class="benefit-text">Live code execution and instant feedback</p>
            </div>
            <div class="benefit-item">
              <div class="benefit-icon">ðŸ“Š</div>
              <h4 class="benefit-title">Detailed Analytics</h4>
              <p class="benefit-text">Comprehensive performance tracking and insights</p>
            </div>
            <div class="benefit-item">
              <div class="benefit-icon">ðŸŽ¯</div>
              <h4 class="benefit-title">Fair Assessment</h4>
              <p class="benefit-text">Standardized evaluation for all candidates</p>
            </div>
          </div>
        </section>
      </div>
    </main>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const toggleBtns = document.querySelectorAll('.toggle-btn');
      const loginForm = document.querySelector('.login-form');
      const registerForm = document.querySelector('.register-form');

      toggleBtns.forEach(btn => {
        btn.addEventListener('click', function() {
          const formType = this.getAttribute('data-form');
          
          toggleBtns.forEach(b => b.classList.remove('active'));
          this.classList.add('active');
          
          if (formType === 'login') {
            loginForm.classList.add('active');
            registerForm.classList.remove('active');
          } else {
            registerForm.classList.add('active');
            loginForm.classList.remove('active');
          }
        });
      });

      // Handle login form submission
      document.getElementById('loginForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const email = document.getElementById('loginEmail').value;
        const password = document.getElementById('loginPassword').value;
        const messageDiv = document.getElementById('loginMessage');
        
        try {
          const response = await fetch('/api/v1/auth/login', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ email, password })
          });
          
          const result = await response.json();
          
          if (response.ok) {
            messageDiv.style.display = 'block';
            messageDiv.style.color = 'green';
            messageDiv.textContent = 'Login successful! Redirecting...';
            
            // Redirect based on user type
            setTimeout(() => {
              window.location.href = result.data.redirectTo;
            }, 1000);
          } else {
            messageDiv.style.display = 'block';
            messageDiv.style.color = 'red';
            messageDiv.textContent = result.message || 'Login failed';
          }
        } catch (error) {
          messageDiv.style.display = 'block';
          messageDiv.style.color = 'red';
          messageDiv.textContent = 'Network error. Please try again.';
        }
      });

      // Handle registration form submission
      document.getElementById('registerForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const firstName = document.getElementById('firstName').value;
        const lastName = document.getElementById('lastName').value;
        const username = document.getElementById('username').value;
        const email = document.getElementById('registerEmail').value;
        const password = document.getElementById('registerPassword').value;
        const confirmPassword = document.getElementById('confirmPassword').value;
        const role = document.getElementById('userRole').value;
        const messageDiv = document.getElementById('registerMessage');
        
        if (password !== confirmPassword) {
          messageDiv.style.display = 'block';
          messageDiv.style.color = 'red';
          messageDiv.textContent = 'Passwords do not match';
          return;
        }
        
        try {
          const response = await fetch('/api/v1/users/register-no-upload', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              username: username,
              email: email,
              password: password,
              fullname: `${firstName} ${lastName}`,
              role: role
            })
          });
          
          const data = await response.json();
          
          if (response.ok) {
            messageDiv.style.display = 'block';
            messageDiv.style.color = 'green';
            messageDiv.textContent = 'Registration successful! Redirecting to dashboard...';
            
            // Redirect to user dashboard after successful registration
            setTimeout(() => {
              if (data.data && data.data.redirectTo) {
                window.location.href = data.data.redirectTo;
              } else {
                window.location.href = '/user-dashboard';
              }
            }, 1500);
          } else {
            messageDiv.style.display = 'block';
            messageDiv.style.color = 'red';
            messageDiv.textContent = data.message || 'Registration failed';
          }
        } catch (error) {
          messageDiv.style.display = 'block';
          messageDiv.style.color = 'red';
          messageDiv.textContent = 'Network error. Please try again.';
        }
      });
    });
  </script>
  
  <style>
    .message {
      margin-top: 10px;
      padding: 10px;
      border-radius: 4px;
      text-align: center;
      font-size: 14px;
    }
    
    .submit-btn {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      border: none;
      padding: 12px 24px;
      border-radius: 8px;
      cursor: pointer;
      text-decoration: none;
      display: inline-block;
      text-align: center;
      font-size: 16px;
      font-weight: 600;
      transition: all 0.3s ease;
      width: 100%;
    }
    
    .submit-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
    }
  </style>
</body>
</html>
